// THIS FILE IS GENERATED BY GULP TASK: "sync-clients"import {Observable} from "rx";
import {ClientV2} from "./client-v2";
import {ObservationClientBase, CombinationClientBase} from "./composite-client-base";
type CombinationKey<T> = OmniSharp.CombinationKey<T>;
type Context<TRequest, TResponse> = OmniSharp.Context<TRequest, TResponse>;

export class ObservationClientV2<T extends ClientV2> extends ObservationClientBase<T> implements OmniSharp.Events.V2 {
    public observeAutocomplete: Rx.Observable<Context<OmniSharp.Models.AutoCompleteRequest, OmniSharp.Models.AutoCompleteResponse[]>>;
    public observeChangebuffer: Rx.Observable<Context<OmniSharp.Models.ChangeBufferRequest, any>>;
    public observeCheckalivestatus: Rx.Observable<Context<any, boolean>>;
    public observeCheckreadystatus: Rx.Observable<Context<any, boolean>>;
    public observeCodecheck: Rx.Observable<Context<OmniSharp.Models.Request, OmniSharp.Models.QuickFixResponse>>;
    public observeCodeformat: Rx.Observable<Context<OmniSharp.Models.Request, OmniSharp.Models.CodeFormatResponse>>;
    public observeCurrentfilemembersasflat: Rx.Observable<Context<OmniSharp.Models.Request, OmniSharp.Models.QuickFix[]>>;
    public observeCurrentfilemembersastree: Rx.Observable<Context<OmniSharp.Models.Request, OmniSharp.Models.FileMemberTree>>;
    public observeFilesChanged: Rx.Observable<Context<OmniSharp.Models.Request[], boolean>>;
    public observeFindimplementations: Rx.Observable<Context<OmniSharp.Models.Request, OmniSharp.Models.QuickFixResponse>>;
    public observeFindsymbols: Rx.Observable<Context<OmniSharp.Models.FindSymbolsRequest, OmniSharp.Models.QuickFixResponse>>;
    public observeFindusages: Rx.Observable<Context<OmniSharp.Models.FindUsagesRequest, OmniSharp.Models.QuickFixResponse>>;
    public observeFixusings: Rx.Observable<Context<OmniSharp.Models.FixUsingsRequest, OmniSharp.Models.FixUsingsResponse>>;
    public observeFormatAfterKeystroke: Rx.Observable<Context<OmniSharp.Models.FormatAfterKeystrokeRequest, OmniSharp.Models.FormatRangeResponse>>;
    public observeFormatRange: Rx.Observable<Context<OmniSharp.Models.FormatRangeRequest, OmniSharp.Models.FormatRangeResponse>>;
    public observeGetcodeactions: Rx.Observable<Context<OmniSharp.Models.V2.GetCodeActionsRequest, OmniSharp.Models.V2.GetCodeActionsResponse>>;
    public observeGettestcontext: Rx.Observable<Context<OmniSharp.Models.TestCommandRequest, OmniSharp.Models.GetTestCommandResponse>>;
    public observeGotodefinition: Rx.Observable<Context<OmniSharp.Models.GotoDefinitionRequest, OmniSharp.Models.GotoDefinitionResponse>>;
    public observeGotofile: Rx.Observable<Context<OmniSharp.Models.Request, OmniSharp.Models.QuickFixResponse>>;
    public observeGotoregion: Rx.Observable<Context<OmniSharp.Models.Request, OmniSharp.Models.QuickFixResponse>>;
    public observeHighlight: Rx.Observable<Context<OmniSharp.Models.HighlightRequest, OmniSharp.Models.HighlightResponse>>;
    public observeMetadata: Rx.Observable<Context<OmniSharp.Models.MetadataRequest, OmniSharp.Models.MetadataResponse>>;
    public observeNavigatedown: Rx.Observable<Context<OmniSharp.Models.Request, OmniSharp.Models.NavigateResponse>>;
    public observeNavigateup: Rx.Observable<Context<OmniSharp.Models.Request, OmniSharp.Models.NavigateResponse>>;
    public observePackagesearch: Rx.Observable<Context<OmniSharp.Models.PackageSearchRequest, OmniSharp.Models.PackageSearchResponse>>;
    public observePackagesource: Rx.Observable<Context<OmniSharp.Models.PackageSourceRequest, OmniSharp.Models.PackageSourceResponse>>;
    public observePackageversion: Rx.Observable<Context<OmniSharp.Models.PackageVersionRequest, OmniSharp.Models.PackageVersionResponse>>;
    public observeProject: Rx.Observable<Context<OmniSharp.Models.Request, OmniSharp.Models.ProjectInformationResponse>>;
    public observeProjects: Rx.Observable<Context<OmniSharp.Models.v1.ProjectInformationRequest, OmniSharp.Models.WorkspaceInformationResponse>>;
    public observeRename: Rx.Observable<Context<OmniSharp.Models.RenameRequest, OmniSharp.Models.RenameResponse>>;
    public observeRuncodeaction: Rx.Observable<Context<OmniSharp.Models.V2.RunCodeActionRequest, OmniSharp.Models.V2.RunCodeActionResponse>>;
    public observeSignatureHelp: Rx.Observable<Context<OmniSharp.Models.Request, OmniSharp.Models.SignatureHelp>>;
    public observeStopserver: Rx.Observable<Context<any, boolean>>;
    public observeTypelookup: Rx.Observable<Context<OmniSharp.Models.TypeLookupRequest, OmniSharp.Models.TypeLookupResponse>>;
    public observeUpdatebuffer: Rx.Observable<Context<OmniSharp.Models.UpdateBufferRequest, any>>;

    constructor(clients: T[] = []) {
        super(clients);

        this.observeAutocomplete = this.makeMergeObserable(client => client.observeAutocomplete);
        this.observeChangebuffer = this.makeMergeObserable(client => client.observeChangebuffer);
        this.observeCheckalivestatus = this.makeMergeObserable(client => client.observeCheckalivestatus);
        this.observeCheckreadystatus = this.makeMergeObserable(client => client.observeCheckreadystatus);
        this.observeCodecheck = this.makeMergeObserable(client => client.observeCodecheck);
        this.observeCodeformat = this.makeMergeObserable(client => client.observeCodeformat);
        this.observeCurrentfilemembersasflat = this.makeMergeObserable(client => client.observeCurrentfilemembersasflat);
        this.observeCurrentfilemembersastree = this.makeMergeObserable(client => client.observeCurrentfilemembersastree);
        this.observeFilesChanged = this.makeMergeObserable(client => client.observeFilesChanged);
        this.observeFindimplementations = this.makeMergeObserable(client => client.observeFindimplementations);
        this.observeFindsymbols = this.makeMergeObserable(client => client.observeFindsymbols);
        this.observeFindusages = this.makeMergeObserable(client => client.observeFindusages);
        this.observeFixusings = this.makeMergeObserable(client => client.observeFixusings);
        this.observeFormatAfterKeystroke = this.makeMergeObserable(client => client.observeFormatAfterKeystroke);
        this.observeFormatRange = this.makeMergeObserable(client => client.observeFormatRange);
        this.observeGetcodeactions = this.makeMergeObserable(client => client.observeGetcodeactions);
        this.observeGettestcontext = this.makeMergeObserable(client => client.observeGettestcontext);
        this.observeGotodefinition = this.makeMergeObserable(client => client.observeGotodefinition);
        this.observeGotofile = this.makeMergeObserable(client => client.observeGotofile);
        this.observeGotoregion = this.makeMergeObserable(client => client.observeGotoregion);
        this.observeHighlight = this.makeMergeObserable(client => client.observeHighlight);
        this.observeMetadata = this.makeMergeObserable(client => client.observeMetadata);
        this.observeNavigatedown = this.makeMergeObserable(client => client.observeNavigatedown);
        this.observeNavigateup = this.makeMergeObserable(client => client.observeNavigateup);
        this.observePackagesearch = this.makeMergeObserable(client => client.observePackagesearch);
        this.observePackagesource = this.makeMergeObserable(client => client.observePackagesource);
        this.observePackageversion = this.makeMergeObserable(client => client.observePackageversion);
        this.observeProject = this.makeMergeObserable(client => client.observeProject);
        this.observeProjects = this.makeMergeObserable(client => client.observeProjects);
        this.observeRename = this.makeMergeObserable(client => client.observeRename);
        this.observeRuncodeaction = this.makeMergeObserable(client => client.observeRuncodeaction);
        this.observeSignatureHelp = this.makeMergeObserable(client => client.observeSignatureHelp);
        this.observeStopserver = this.makeMergeObserable(client => client.observeStopserver);
        this.observeTypelookup = this.makeMergeObserable(client => client.observeTypelookup);
        this.observeUpdatebuffer = this.makeMergeObserable(client => client.observeUpdatebuffer);
    }
}

export class CombinationClientV2<T extends ClientV2> extends CombinationClientBase<T> implements OmniSharp.Events.Aggregate.V2 {
    public observeAutocomplete: Rx.Observable<CombinationKey<Context<OmniSharp.Models.AutoCompleteRequest, OmniSharp.Models.AutoCompleteResponse[]>>[]>;
    public observeChangebuffer: Rx.Observable<CombinationKey<Context<OmniSharp.Models.ChangeBufferRequest, any>>[]>;
    public observeCheckalivestatus: Rx.Observable<CombinationKey<Context<any, boolean>>[]>;
    public observeCheckreadystatus: Rx.Observable<CombinationKey<Context<any, boolean>>[]>;
    public observeCodecheck: Rx.Observable<CombinationKey<Context<OmniSharp.Models.Request, OmniSharp.Models.QuickFixResponse>>[]>;
    public observeCodeformat: Rx.Observable<CombinationKey<Context<OmniSharp.Models.Request, OmniSharp.Models.CodeFormatResponse>>[]>;
    public observeCurrentfilemembersasflat: Rx.Observable<CombinationKey<Context<OmniSharp.Models.Request, OmniSharp.Models.QuickFix[]>>[]>;
    public observeCurrentfilemembersastree: Rx.Observable<CombinationKey<Context<OmniSharp.Models.Request, OmniSharp.Models.FileMemberTree>>[]>;
    public observeFilesChanged: Rx.Observable<CombinationKey<Context<OmniSharp.Models.Request[], boolean>>[]>;
    public observeFindimplementations: Rx.Observable<CombinationKey<Context<OmniSharp.Models.Request, OmniSharp.Models.QuickFixResponse>>[]>;
    public observeFindsymbols: Rx.Observable<CombinationKey<Context<OmniSharp.Models.FindSymbolsRequest, OmniSharp.Models.QuickFixResponse>>[]>;
    public observeFindusages: Rx.Observable<CombinationKey<Context<OmniSharp.Models.FindUsagesRequest, OmniSharp.Models.QuickFixResponse>>[]>;
    public observeFixusings: Rx.Observable<CombinationKey<Context<OmniSharp.Models.FixUsingsRequest, OmniSharp.Models.FixUsingsResponse>>[]>;
    public observeFormatAfterKeystroke: Rx.Observable<CombinationKey<Context<OmniSharp.Models.FormatAfterKeystrokeRequest, OmniSharp.Models.FormatRangeResponse>>[]>;
    public observeFormatRange: Rx.Observable<CombinationKey<Context<OmniSharp.Models.FormatRangeRequest, OmniSharp.Models.FormatRangeResponse>>[]>;
    public observeGetcodeactions: Rx.Observable<CombinationKey<Context<OmniSharp.Models.V2.GetCodeActionsRequest, OmniSharp.Models.V2.GetCodeActionsResponse>>[]>;
    public observeGettestcontext: Rx.Observable<CombinationKey<Context<OmniSharp.Models.TestCommandRequest, OmniSharp.Models.GetTestCommandResponse>>[]>;
    public observeGotodefinition: Rx.Observable<CombinationKey<Context<OmniSharp.Models.GotoDefinitionRequest, OmniSharp.Models.GotoDefinitionResponse>>[]>;
    public observeGotofile: Rx.Observable<CombinationKey<Context<OmniSharp.Models.Request, OmniSharp.Models.QuickFixResponse>>[]>;
    public observeGotoregion: Rx.Observable<CombinationKey<Context<OmniSharp.Models.Request, OmniSharp.Models.QuickFixResponse>>[]>;
    public observeHighlight: Rx.Observable<CombinationKey<Context<OmniSharp.Models.HighlightRequest, OmniSharp.Models.HighlightResponse>>[]>;
    public observeMetadata: Rx.Observable<CombinationKey<Context<OmniSharp.Models.MetadataRequest, OmniSharp.Models.MetadataResponse>>[]>;
    public observeNavigatedown: Rx.Observable<CombinationKey<Context<OmniSharp.Models.Request, OmniSharp.Models.NavigateResponse>>[]>;
    public observeNavigateup: Rx.Observable<CombinationKey<Context<OmniSharp.Models.Request, OmniSharp.Models.NavigateResponse>>[]>;
    public observePackagesearch: Rx.Observable<CombinationKey<Context<OmniSharp.Models.PackageSearchRequest, OmniSharp.Models.PackageSearchResponse>>[]>;
    public observePackagesource: Rx.Observable<CombinationKey<Context<OmniSharp.Models.PackageSourceRequest, OmniSharp.Models.PackageSourceResponse>>[]>;
    public observePackageversion: Rx.Observable<CombinationKey<Context<OmniSharp.Models.PackageVersionRequest, OmniSharp.Models.PackageVersionResponse>>[]>;
    public observeProject: Rx.Observable<CombinationKey<Context<OmniSharp.Models.Request, OmniSharp.Models.ProjectInformationResponse>>[]>;
    public observeProjects: Rx.Observable<CombinationKey<Context<OmniSharp.Models.v1.ProjectInformationRequest, OmniSharp.Models.WorkspaceInformationResponse>>[]>;
    public observeRename: Rx.Observable<CombinationKey<Context<OmniSharp.Models.RenameRequest, OmniSharp.Models.RenameResponse>>[]>;
    public observeRuncodeaction: Rx.Observable<CombinationKey<Context<OmniSharp.Models.V2.RunCodeActionRequest, OmniSharp.Models.V2.RunCodeActionResponse>>[]>;
    public observeSignatureHelp: Rx.Observable<CombinationKey<Context<OmniSharp.Models.Request, OmniSharp.Models.SignatureHelp>>[]>;
    public observeStopserver: Rx.Observable<CombinationKey<Context<any, boolean>>[]>;
    public observeTypelookup: Rx.Observable<CombinationKey<Context<OmniSharp.Models.TypeLookupRequest, OmniSharp.Models.TypeLookupResponse>>[]>;
    public observeUpdatebuffer: Rx.Observable<CombinationKey<Context<OmniSharp.Models.UpdateBufferRequest, any>>[]>;


    constructor(clients: T[] = []) {
        super(clients);

       this.observeAutocomplete = this.makeCombineObserable(client => client.observeAutocomplete);
       this.observeChangebuffer = this.makeCombineObserable(client => client.observeChangebuffer);
       this.observeCheckalivestatus = this.makeCombineObserable(client => client.observeCheckalivestatus);
       this.observeCheckreadystatus = this.makeCombineObserable(client => client.observeCheckreadystatus);
       this.observeCodecheck = this.makeCombineObserable(client => client.observeCodecheck);
       this.observeCodeformat = this.makeCombineObserable(client => client.observeCodeformat);
       this.observeCurrentfilemembersasflat = this.makeCombineObserable(client => client.observeCurrentfilemembersasflat);
       this.observeCurrentfilemembersastree = this.makeCombineObserable(client => client.observeCurrentfilemembersastree);
       this.observeFilesChanged = this.makeCombineObserable(client => client.observeFilesChanged);
       this.observeFindimplementations = this.makeCombineObserable(client => client.observeFindimplementations);
       this.observeFindsymbols = this.makeCombineObserable(client => client.observeFindsymbols);
       this.observeFindusages = this.makeCombineObserable(client => client.observeFindusages);
       this.observeFixusings = this.makeCombineObserable(client => client.observeFixusings);
       this.observeFormatAfterKeystroke = this.makeCombineObserable(client => client.observeFormatAfterKeystroke);
       this.observeFormatRange = this.makeCombineObserable(client => client.observeFormatRange);
       this.observeGetcodeactions = this.makeCombineObserable(client => client.observeGetcodeactions);
       this.observeGettestcontext = this.makeCombineObserable(client => client.observeGettestcontext);
       this.observeGotodefinition = this.makeCombineObserable(client => client.observeGotodefinition);
       this.observeGotofile = this.makeCombineObserable(client => client.observeGotofile);
       this.observeGotoregion = this.makeCombineObserable(client => client.observeGotoregion);
       this.observeHighlight = this.makeCombineObserable(client => client.observeHighlight);
       this.observeMetadata = this.makeCombineObserable(client => client.observeMetadata);
       this.observeNavigatedown = this.makeCombineObserable(client => client.observeNavigatedown);
       this.observeNavigateup = this.makeCombineObserable(client => client.observeNavigateup);
       this.observePackagesearch = this.makeCombineObserable(client => client.observePackagesearch);
       this.observePackagesource = this.makeCombineObserable(client => client.observePackagesource);
       this.observePackageversion = this.makeCombineObserable(client => client.observePackageversion);
       this.observeProject = this.makeCombineObserable(client => client.observeProject);
       this.observeProjects = this.makeCombineObserable(client => client.observeProjects);
       this.observeRename = this.makeCombineObserable(client => client.observeRename);
       this.observeRuncodeaction = this.makeCombineObserable(client => client.observeRuncodeaction);
       this.observeSignatureHelp = this.makeCombineObserable(client => client.observeSignatureHelp);
       this.observeStopserver = this.makeCombineObserable(client => client.observeStopserver);
       this.observeTypelookup = this.makeCombineObserable(client => client.observeTypelookup);
       this.observeUpdatebuffer = this.makeCombineObserable(client => client.observeUpdatebuffer);
    }
}
